// - MEANS DONE


MainModel (model for all controller)
- hotelList : ArrayList<Hotel>



HRSview
- scanner : Scanner
+ CREATE_HOTEL : static final int
+ VIEW_HOTEL : static final int
+ MANAGE_HOTEL : static final int
+ SIMULATE_BOOKING : static final int

+ HRSview()


HRS (main controlller) 
- model : MainModel
- view : HRSview
- creator : Creator;
- viewer: HotelViewer;
- manager : HotelManager;
- booker : Booker;


+ HRS()
+ displayInterface() : void





CreatorView                             //DONE
- scanner : Scanner
+ CREATE : static final int

+ CreatorView()
+ displayLongDivider() : void
+ displayShortDivider() : void
+ promptHotelName() : String
+ displayNewHotelSuccessful() : void
+ displayNewHotelFailed() : void


Creator (sub controller)                //DONE
- model : MainModel
- view : CreatorView

+ Creator(model : MainModel)
+ displayInterface() : void




HotelViewerView
- scanner : Scanner
+ HIGH_LVL : static final int
+ TOTAL_ROOM : static final int
+ INFO_ROOM : static final int
+ INFO_RESERVATION : static final int

+ HotelViewerView()

HotelViewer (sub controller)
- model : MainModel
- view : HotelViewerView

+ HotelViewer(model : MainModel)
+ displayInterface() : void





HotelManagerView
- scanner : Scanner
+ CHANGE_NAME : static final int
+ ADD_ROOM : static final int
+ REMOVE_ROOM : static final int
+ UPDATE_PRICE : static final int
+ REMOVE_RESERVATION : static final int
+ REMOVE_HOTEL : static final int

+ HotelManagerView()

HotelManager (sub controller)
- model : MainModel
- view : HotelManagerView

+ HotelManager(model : MainModel)
+ displayInterface() : void





BookerView
- scanner : Scanenr
+ BOOK_ROOM : static final int

+ BookerView()

Booker (sub controller)
- model : MainModel
- view : BookerView

+ Booker(model : MainModel)
+ displayInterface() : void







Hotel (Model)
    Attributes                                          //
    - name : String                             
    - roomList : ArrayList<Room>                    
    - reservationList : ArrayList<Reservation>  
    - maximumRooms : int = 50                   

    Methods                                             //
    - getName : String                                 
    - getRoomList : ArrayList<Room>                    
    - getReservationList : ArrayList<Reservation>       
    - getMaximumRooms : int                            
    - getEarnings : double                              
    - getAvailableRooms(Date) : int                     
    - getBookedRooms(Date) : int                        
    - getRoomAvailability(Room room, int month) : boolean[] 
    - setName(String name) : void
    - addRoom(String name) : void
    - removeRoom(String name) : void
    - removeReservation(Guest guest) : void
    


Reservation         //
    Attributes
    - guest : Guest
    - checkInDate : Date
    - checkOutDate : Date
    - room : Room

    Methods
    - getTotalPrice() : double
    - getCostPerNight() : double
    - getGuest() : Guest
    - getCheckInDate() : Date
    - getCheckOutDate() : Date
    - getRoom : Room

Room                //
    Attributes
    - name : String
    - price : double = 1299.0

    Methods
    - getName() : String
    - getPrice() : double
    - setPrice(double price) : boolean 

Guest               //
    Attributes
    - firstName : String
    - lastName : String
    - fullName : String

    Method
    - getFirstName() : String
    - getLastName() : String
    - getFullName() : String

Date                //
    Attributes
    - year : int
    - month : int
    - day : int
    - hour : int
    - minute : int

    Methods
    - getYear() : int
    - getMonth() : int
    - getDay() : int
    - getHour() : int
    - getMinute() : int
    - setYear(newYear : int) : void
    - setMonth(newMonth : int) : void
    - setDay(newDay : int) : void
    - setHour(newHour : int) : void
    - setMinute(newMinute : int) : void
    - compareDay(date1 : Date, date2 : Date) :  



